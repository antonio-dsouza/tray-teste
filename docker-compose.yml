services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tray_backend
    restart: unless-stopped
    working_dir: /var/www/html/
    volumes:
      - ./backend:/var/www/html/
    networks:
      - tray_network
    depends_on:
      - mysql
      - redis
    env_file:
      - ./backend/.env

  nginx:
    image: nginx:stable-alpine
    container_name: tray_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - tray_network
    depends_on:
      - backend

  mysql:
    image: mysql:8.0
    container_name: tray_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-tray_db}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-tray_password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-tray_password}
      MYSQL_USER: ${DB_USERNAME:-tray_user}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tray_network

  redis:
    image: redis:alpine
    container_name: tray_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tray_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tray_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - tray_network

networks:
  tray_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
